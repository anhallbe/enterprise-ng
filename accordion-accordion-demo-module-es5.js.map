{"version":3,"sources":["src/app/accordion/accordion-dynamic.demo.html","src/app/accordion/accordion-panels.demo.html","src/app/accordion/accordion.demo.html","src/app/accordion/accordion-demo.module.ts","src/app/accordion/accordion-demo.routes.ts","src/app/accordion/accordion-dynamic.demo.ts","src/app/accordion/accordion-panels.demo.ts","src/app/accordion/accordion.demo.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Dynamic Accordion</h2>\\r\\n    <div class=\\\"field1\\\">\\r\\n      <button soho-button (click)=\\\"addMore()\\\">Add Header</button>\\r\\n      <button soho-button (click)=\\\"toggleAllowOnePane()\\\">Set 'AllowOnePane' to {{this.allowOnePane ? \\\"false\\\" : \\\"true\\\"}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br /><br /><br />\\r\\n<soho-accordion [allowOnePane]=\\\"allowOnePane\\\" (expand)=\\\"onExpand($event)\\\" (collapse)=\\\"onCollapse($event)\\\">\\r\\n  <ng-container *ngFor=\\\"let item of sampleData\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"accordionDynamicDemoTemplate; context: {item: item}\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</soho-accordion>\\r\\n\\r\\n<ng-template #accordionDynamicDemoTemplate let-item=\\\"item\\\">\\r\\n    <soho-accordion-header [id]=\\\"item.id\\\" [isExpanded]=\\\"item.expanded\\\">\\r\\n        <span>{{ item.header }}</span>\\r\\n    </soho-accordion-header>\\r\\n    <soho-accordion-pane>\\r\\n      <div class=\\\"accordion-content\\\">{{ item.content }}</div>\\r\\n    </soho-accordion-pane>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Default</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Alternate</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      [alternate]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Inverse</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      [inverse]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">All headers expanded on initial load</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"false\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <soho-accordion-header [isExpanded]=\\\"true\\\">Warehouse Location A</soho-accordion-header>\\r\\n      <soho-accordion-pane>\\r\\n        <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n        <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n      </soho-accordion-pane>\\r\\n      <soho-accordion-header [isExpanded]=\\\"true\\\">Warehouse Location B</soho-accordion-header>\\r\\n      <soho-accordion-pane>\\r\\n        <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n        <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n      </soho-accordion-pane>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #AccordionContent>\\r\\n  <soho-accordion-header>Warehouse Location A</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n    <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Warehouse Location B</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n    <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n  </soho-accordion-pane>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n\\r\\n    <h2 class=\\\"fieldset-title\\\">Accordion</h2>\\r\\n\\r\\n    <div class=\\\"field1\\\">\\r\\n      <button soho-button (click)=\\\"expandAll()\\\">Expand All</button>\\r\\n      <button soho-button (click)=\\\"collapseAll()\\\">Collapse All</button>\\r\\n      <button soho-button (click)=\\\"toggle()\\\">Toggle</button>\\r\\n      <button soho-button (click)=\\\"expand()\\\">Expand</button>\\r\\n      <button soho-button (click)=\\\"collapse()\\\">Collapse</button>\\r\\n      <button soho-button (click)=\\\"update()\\\">Update</button>\\r\\n      <button soho-button (click)=\\\"disable()\\\">Disable</button>\\r\\n      <button soho-button (click)=\\\"enable()\\\">Enable</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<br><br><br>\\r\\n\\r\\n<soho-accordion [allowOnePane]=\\\"false\\\"\\r\\n  (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n  (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n  (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n  (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n  (selected)=\\\"onSelected($event)\\\"\\r\\n  (followlink)=\\\"onFollowlink($event)\\\"\\r\\n  (expand)=\\\"onExpand($event)\\\"\\r\\n  (collapse)=\\\"onCollapse($event)\\\"\\r\\n  (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n  >\\r\\n  <soho-accordion-header>Warehouse Location</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Remix, optimize, \\\"B2B, iterate?\\\" Best-of-breed efficient beta-test; social cutting-edge: rich magnetic tagclouds front-end infomediaries viral authentic incentivize sexy extensible functionalities incentivize. Generate killer authentic grow vertical blogospheres, functionalities ecologies harness, \\\"tag solutions synergies exploit data-driven B2C open-source e-markets optimize create, enhance convergence create.\\\" Out-of-the-box strategize best-of-breed back-end, deploy design markets metrics. Content web services enhance leading-edge Cluetrain, deliverables dot-com scalable. User-centric morph, back-end, synthesize mesh, frictionless, exploit next-generation tag portals, e-commerce channels; integrate; recontextualize distributed revolutionize innovative eyeballs.</div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header [isExpanded]=\\\"true\\\">Sort By</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-radiobutton id=\\\"sort-recent\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-recent\\\" />\\r\\n        <label soho-label for=\\\"sort-recent\\\" forRadioButton=\\\"'true'\\\">Recently Added</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-price-low-high\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"price-low-high\\\" />\\r\\n        <label soho-label for=\\\"sort-price-low-high\\\" forRadioButton=\\\"'true'\\\">Price: Low – High</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-price-high-low\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-price-high-low\\\" />\\r\\n        <label soho-label for=\\\"sort-price-high-low\\\" forRadioButton=\\\"'true'\\\">Price: High – Low</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-alphabetical\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-alphabetical\\\" />\\r\\n        <label soho-label for=\\\"sort-alphabetical\\\" forRadioButton=\\\"'true'\\\">Alphabetical</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-stock\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-stock\\\" />\\r\\n        <label soho-label for=\\\"sort-stock\\\" forRadioButton=\\\"'true'\\\">In Stock</label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Brand Name</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Magnetic holistic, integrate envisioneer value podcasting leverage, \\\"granular supply-chains systems supply-chains repurpose transform rss-capable seamless; robust disintermediate.\\\" Cluetrain: action-items rich metrics transition engage syndicate aggregate transform applications; revolutionize--infrastructures recontextualize platforms empower bandwidth incentivize, innovate, virtual portals whiteboard rich-clientAPIs intuitive. Synergies infrastructures; e-markets synthesize user-centric expedite. ROI world-class, ecologies utilize benchmark content--synergistic enhance. Syndicate synergistic collaborative enterprise ROI; folksonomies visionary holistic synergies grow.</div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Material</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Revolutionize implement infrastructures social front-end, world-class bricks-and-clicks extensible recontextualize? User-contributed e-business relationships widgets bleeding-edge transform, \\\"viral world-class, unleash sexy embrace cross-media best-of-breed wireless, functionalities.\\\" Markets, \\\"transition architectures, redefine infomediaries world-class back-end harness, mindshare blogospheres; schemas disintermediate rich,\\\" benchmark integrated markets blogging synergies dynamic social back-end convergence. Reinvent A-list A-list B2C rss-capable, mesh bandwidth mission-critical disintermediate strategize networks distributed integrated bleeding-edge rss-capable partnerships incubate, web-enabled e-markets. A-list channels enhance citizen-media, value solutions beta-test platforms enable interfaces, transition interfaces one-to-one expedite scalable.</div>\\r\\n  </soho-accordion-pane>\\r\\n</soho-accordion>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SohoComponentsModule } from 'ids-enterprise-ng';\r\nimport { AccordionDemoComponent } from './accordion.demo';\r\nimport { AccordionDynamicDemoComponent } from './accordion-dynamic.demo';\r\nimport { AccordionPanelsDemoComponent } from './accordion-panels.demo';\r\nimport { AccordionDemoRoutingModule } from './accordion-demo.routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionDemoComponent,\r\n    AccordionDynamicDemoComponent,\r\n    AccordionPanelsDemoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SohoComponentsModule,\r\n    AccordionDemoRoutingModule\r\n   ],\r\n  providers: [\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class AccordionDemoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccordionDemoComponent } from './accordion.demo';\r\nimport { AccordionDynamicDemoComponent } from './accordion-dynamic.demo';\r\nimport { AccordionPanelsDemoComponent } from './accordion-panels.demo';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AccordionDemoComponent },\r\n  { path: 'dynamic', component: AccordionDynamicDemoComponent },\r\n  { path: 'panels', component: AccordionPanelsDemoComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccordionDemoRoutingModule { }\r\n","import {\n  Component,\n  ViewChild,\n  QueryList,\n  ContentChildren,\n  forwardRef\n} from '@angular/core';\n\nimport {\n  SohoAccordionHeaderComponent,\n  SohoAccordionComponent,\n  SohoAccordionPaneComponent\n} from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-dynamic-demo', // tslint:disable-line\n  templateUrl: './accordion-dynamic.demo.html',\n})\nexport class AccordionDynamicDemoComponent {\n\n  // tslint:disable-next-line:no-forward-ref\n  @ContentChildren(forwardRef(() => SohoAccordionHeaderComponent))\n  headers: QueryList<SohoAccordionHeaderComponent>;\n\n  // tslint:disable-next-line:no-forward-ref\n  @ContentChildren(forwardRef(() => SohoAccordionPaneComponent))\n  panes: QueryList<SohoAccordionPaneComponent>;\n\n  public sampleData = [\n    { id: 1, header: 'Header 1', content: 'This is the content of header 1', expanded: false  },\n    { id: 2, header: 'Header 2', content: 'This is the content of header 2', expanded: true }\n  ];\n\n  public allowOnePane = true;\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  public addMore() {\n    this.sampleData.forEach((d) => { d.expanded = false; });\n    const idx = this.sampleData.length + 1;\n    this.sampleData.push({ id: idx, header: 'Header ' + idx, content: 'I\\'ve added some more header ' + idx, expanded: true });\n\n    // The updates must be called after the add has ocurred to allow for the view to be updated view, otherwise\n    // the widget does not see the changes.  Consider changing the\n    setTimeout(() => {\n      this.accordion.updated();\n    });\n  }\n\n  public toggleAllowOnePane(): void {\n    this.allowOnePane = !this.allowOnePane;\n\n    // If only one pane is allowed, then collapse them.\n    if (this.allowOnePane) {\n      let collapse = false;\n      this.sampleData.forEach((d) => {\n        if (d.expanded && !collapse) {\n          collapse = true;\n        } else {\n          d.expanded = false;\n        }\n      });\n    }\n\n    setTimeout(() => { this.accordion.updated(); });\n  }\n\n  public onExpand(event: SohoAccordionEvent) {\n    const header = this.sampleData.find((h) => `${h.id}` === event.anchor[0].parentElement.id);\n\n    if (header) {\n      this.headers.forEach((h) => this.accordion.collapse(h));\n\n      // this.accordion.collapse(header)\n      header.expanded = true;\n    }\n  }\n\n  public onCollapse(event: SohoAccordionEvent) {\n    const header = this.sampleData.find((h) => `${h.id}` === event.anchor[0].parentElement.id);\n\n    if (header) {\n      header.expanded = false;\n    }\n\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { SohoAccordionComponent } from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-panels-demo', // tslint:disable-line\n  templateUrl: './accordion-panels.demo.html',\n})\nexport class AccordionPanelsDemoComponent {\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  onBeforeCollapse(args) {\n    console.log('Collapsed!', args);\n  }\n  onBeforeExpand(args) {\n    console.log('Expanded!', args);\n  }\n  onBeforeSelect(args) {\n    console.log('Selected!', args);\n  }\n  onAfterExpand(args) {\n    console.log('onAfterExpand!', args);\n  }\n  onSelected(args) {\n    console.log('onSelected!', args);\n  }\n\n  onFollowlink(args): void {\n    console.log('onFollowlink!', args);\n  }\n  onExpand(args) {\n    console.log('onExpand!', args);\n  }\n  onCollapse(args): void {\n    console.log('onExpand!', args);\n  }\n  onAfterCollapse(args): void {\n    console.log('onAfterCollapse!', args);\n  }\n}\n","import { Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { SohoAccordionComponent } from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-demo', // tslint:disable-line\n  templateUrl: './accordion.demo.html',\n})\nexport class AccordionDemoComponent implements AfterViewInit {\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  onBeforeCollapse(args) {\n    console.log('Collapsed!', args);\n  }\n  onBeforeExpand(args) {\n    console.log('Expanded!', args);\n  }\n  onBeforeSelect(args) {\n    console.log('Selected!', args);\n  }\n  onAfterExpand(args) {\n    console.log('onAfterExpand!', args);\n  }\n  onSelected(args) {\n    console.log('onSelected!', args);\n  }\n\n  onFollowlink(args): void {\n    console.log('onFollowlink!', args);\n  }\n  onExpand(args) {\n    console.log('onExpand!', args);\n  }\n  onCollapse(args): void {\n    console.log('onExpand!', args);\n  }\n  onAfterCollapse(args): void {\n    console.log('onAfterCollapse!', args);\n  }\n  collapseAll(): void {\n    this.accordion.collapseAll();\n  }\n  expandAll(): void {\n    this.accordion.expandAll();\n  }\n\n  toggle(): void {\n    this.accordion.toggle(this.accordion.getHeader(1));\n  }\n\n  expand(): void {\n    this.accordion.expand(this.accordion.getHeader(1));\n  }\n\n  collapse(): void {\n    this.accordion.collapse(this.accordion.getHeader(1));\n  }\n\n  disable(): void {\n    this.accordion.getHeader(1).isDisabled = true;\n    //    this.accordion.disable();\n  }\n\n  enable(): void {\n    this.accordion.getHeader(1).isDisabled = false;\n    // this.accordion.enable();\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  update(): void {\n    if (this.accordion.displayChevron === undefined) {\n      this.accordion.displayChevron = false;\n    } else {\n      this.accordion.displayChevron = !this.accordion.displayChevron;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///","file":"accordion-accordion-demo-module-es5.js"}