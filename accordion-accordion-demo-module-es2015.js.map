{"version":3,"sources":["./src/app/accordion/accordion-dynamic.demo.html","./src/app/accordion/accordion-panels.demo.html","./src/app/accordion/accordion.demo.html","./src/app/accordion/accordion-demo.module.ts","./src/app/accordion/accordion-demo.routes.ts","./src/app/accordion/accordion-dynamic.demo.ts","./src/app/accordion/accordion-panels.demo.ts","./src/app/accordion/accordion.demo.ts"],"names":[],"mappings":"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","file":"accordion-accordion-demo-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Dynamic Accordion</h2>\\r\\n    <div class=\\\"field1\\\">\\r\\n      <button soho-button (click)=\\\"addMore()\\\">Add Header</button>\\r\\n      <button soho-button (click)=\\\"toggleAllowOnePane()\\\">Set 'AllowOnePane' to {{this.allowOnePane ? \\\"false\\\" : \\\"true\\\"}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<br /><br /><br />\\r\\n<soho-accordion [allowOnePane]=\\\"allowOnePane\\\" (expand)=\\\"onExpand($event)\\\" (collapse)=\\\"onCollapse($event)\\\">\\r\\n  <ng-container *ngFor=\\\"let item of sampleData\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"accordionDynamicDemoTemplate; context: {item: item}\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</soho-accordion>\\r\\n\\r\\n<ng-template #accordionDynamicDemoTemplate let-item=\\\"item\\\">\\r\\n    <soho-accordion-header [id]=\\\"item.id\\\" [isExpanded]=\\\"item.expanded\\\">\\r\\n        <span>{{ item.header }}</span>\\r\\n    </soho-accordion-header>\\r\\n    <soho-accordion-pane>\\r\\n      <div class=\\\"accordion-content\\\">{{ item.content }}</div>\\r\\n    </soho-accordion-pane>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Default</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Alternate</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      [alternate]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">Inverse</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"true\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      [inverse]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"AccordionContent\\\"></ng-container>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n    <h2 class=\\\"fieldset-title\\\">All headers expanded on initial load</h2>\\r\\n    <soho-accordion\\r\\n      [allowOnePane]=\\\"false\\\"\\r\\n      [hasPanels]=\\\"true\\\"\\r\\n      (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n      (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n      (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n      (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n      (selected)=\\\"onSelected($event)\\\"\\r\\n      (followlink)=\\\"onFollowlink($event)\\\"\\r\\n      (expand)=\\\"onExpand($event)\\\"\\r\\n      (collapse)=\\\"onCollapse($event)\\\"\\r\\n      (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n    >\\r\\n      <soho-accordion-header [isExpanded]=\\\"true\\\">Warehouse Location A</soho-accordion-header>\\r\\n      <soho-accordion-pane>\\r\\n        <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n        <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n      </soho-accordion-pane>\\r\\n      <soho-accordion-header [isExpanded]=\\\"true\\\">Warehouse Location B</soho-accordion-header>\\r\\n      <soho-accordion-pane>\\r\\n        <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n        <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n      </soho-accordion-pane>\\r\\n    </soho-accordion>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #AccordionContent>\\r\\n  <soho-accordion-header>Warehouse Location A</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n    <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Warehouse Location B</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <soho-accordion-header>Item 1</soho-accordion-header>\\r\\n    <soho-accordion-header>Item 2</soho-accordion-header>\\r\\n  </soho-accordion-pane>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"twelve columns\\\">\\r\\n\\r\\n    <h2 class=\\\"fieldset-title\\\">Accordion</h2>\\r\\n\\r\\n    <div class=\\\"field1\\\">\\r\\n      <button soho-button (click)=\\\"expandAll()\\\">Expand All</button>\\r\\n      <button soho-button (click)=\\\"collapseAll()\\\">Collapse All</button>\\r\\n      <button soho-button (click)=\\\"toggle()\\\">Toggle</button>\\r\\n      <button soho-button (click)=\\\"expand()\\\">Expand</button>\\r\\n      <button soho-button (click)=\\\"collapse()\\\">Collapse</button>\\r\\n      <button soho-button (click)=\\\"update()\\\">Update</button>\\r\\n      <button soho-button (click)=\\\"disable()\\\">Disable</button>\\r\\n      <button soho-button (click)=\\\"enable()\\\">Enable</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<br><br><br>\\r\\n\\r\\n<soho-accordion [allowOnePane]=\\\"false\\\"\\r\\n  (beforeexpand)=\\\"onBeforeExpand($event)\\\"\\r\\n  (beforecollapse)=\\\"onBeforeCollapse($event)\\\"\\r\\n  (beforeselect)=\\\"onBeforeSelect($event)\\\"\\r\\n  (afterexpand)=\\\"onAfterExpand($event)\\\"\\r\\n  (selected)=\\\"onSelected($event)\\\"\\r\\n  (followlink)=\\\"onFollowlink($event)\\\"\\r\\n  (expand)=\\\"onExpand($event)\\\"\\r\\n  (collapse)=\\\"onCollapse($event)\\\"\\r\\n  (aftercollapse)=\\\"onAfterCollapse($event)\\\"\\r\\n  >\\r\\n  <soho-accordion-header>Warehouse Location</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Remix, optimize, \\\"B2B, iterate?\\\" Best-of-breed efficient beta-test; social cutting-edge: rich magnetic tagclouds front-end infomediaries viral authentic incentivize sexy extensible functionalities incentivize. Generate killer authentic grow vertical blogospheres, functionalities ecologies harness, \\\"tag solutions synergies exploit data-driven B2C open-source e-markets optimize create, enhance convergence create.\\\" Out-of-the-box strategize best-of-breed back-end, deploy design markets metrics. Content web services enhance leading-edge Cluetrain, deliverables dot-com scalable. User-centric morph, back-end, synthesize mesh, frictionless, exploit next-generation tag portals, e-commerce channels; integrate; recontextualize distributed revolutionize innovative eyeballs.</div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header [isExpanded]=\\\"true\\\">Sort By</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-radiobutton id=\\\"sort-recent\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-recent\\\" />\\r\\n        <label soho-label for=\\\"sort-recent\\\" forRadioButton=\\\"'true'\\\">Recently Added</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-price-low-high\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"price-low-high\\\" />\\r\\n        <label soho-label for=\\\"sort-price-low-high\\\" forRadioButton=\\\"'true'\\\">Price: Low – High</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-price-high-low\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-price-high-low\\\" />\\r\\n        <label soho-label for=\\\"sort-price-high-low\\\" forRadioButton=\\\"'true'\\\">Price: High – Low</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-alphabetical\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-alphabetical\\\" />\\r\\n        <label soho-label for=\\\"sort-alphabetical\\\" forRadioButton=\\\"'true'\\\">Alphabetical</label>\\r\\n        <br>\\r\\n        <input soho-radiobutton id=\\\"sort-stock\\\" type=\\\"radio\\\" name=\\\"sort\\\" value=\\\"sort-stock\\\" />\\r\\n        <label soho-label for=\\\"sort-stock\\\" forRadioButton=\\\"'true'\\\">In Stock</label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Brand Name</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Magnetic holistic, integrate envisioneer value podcasting leverage, \\\"granular supply-chains systems supply-chains repurpose transform rss-capable seamless; robust disintermediate.\\\" Cluetrain: action-items rich metrics transition engage syndicate aggregate transform applications; revolutionize--infrastructures recontextualize platforms empower bandwidth incentivize, innovate, virtual portals whiteboard rich-clientAPIs intuitive. Synergies infrastructures; e-markets synthesize user-centric expedite. ROI world-class, ecologies utilize benchmark content--synergistic enhance. Syndicate synergistic collaborative enterprise ROI; folksonomies visionary holistic synergies grow.</div>\\r\\n  </soho-accordion-pane>\\r\\n  <soho-accordion-header>Material</soho-accordion-header>\\r\\n  <soho-accordion-pane>\\r\\n    <div class=\\\"accordion-content\\\">Revolutionize implement infrastructures social front-end, world-class bricks-and-clicks extensible recontextualize? User-contributed e-business relationships widgets bleeding-edge transform, \\\"viral world-class, unleash sexy embrace cross-media best-of-breed wireless, functionalities.\\\" Markets, \\\"transition architectures, redefine infomediaries world-class back-end harness, mindshare blogospheres; schemas disintermediate rich,\\\" benchmark integrated markets blogging synergies dynamic social back-end convergence. Reinvent A-list A-list B2C rss-capable, mesh bandwidth mission-critical disintermediate strategize networks distributed integrated bleeding-edge rss-capable partnerships incubate, web-enabled e-markets. A-list channels enhance citizen-media, value solutions beta-test platforms enable interfaces, transition interfaces one-to-one expedite scalable.</div>\\r\\n  </soho-accordion-pane>\\r\\n</soho-accordion>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SohoComponentsModule } from 'ids-enterprise-ng';\r\nimport { AccordionDemoComponent } from './accordion.demo';\r\nimport { AccordionDynamicDemoComponent } from './accordion-dynamic.demo';\r\nimport { AccordionPanelsDemoComponent } from './accordion-panels.demo';\r\nimport { AccordionDemoRoutingModule } from './accordion-demo.routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionDemoComponent,\r\n    AccordionDynamicDemoComponent,\r\n    AccordionPanelsDemoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SohoComponentsModule,\r\n    AccordionDemoRoutingModule\r\n   ],\r\n  providers: [\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class AccordionDemoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccordionDemoComponent } from './accordion.demo';\r\nimport { AccordionDynamicDemoComponent } from './accordion-dynamic.demo';\r\nimport { AccordionPanelsDemoComponent } from './accordion-panels.demo';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AccordionDemoComponent },\r\n  { path: 'dynamic', component: AccordionDynamicDemoComponent },\r\n  { path: 'panels', component: AccordionPanelsDemoComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccordionDemoRoutingModule { }\r\n","import {\n  Component,\n  ViewChild,\n  QueryList,\n  ContentChildren,\n  forwardRef\n} from '@angular/core';\n\nimport {\n  SohoAccordionHeaderComponent,\n  SohoAccordionComponent,\n  SohoAccordionPaneComponent\n} from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-dynamic-demo', // tslint:disable-line\n  templateUrl: './accordion-dynamic.demo.html',\n})\nexport class AccordionDynamicDemoComponent {\n\n  // tslint:disable-next-line:no-forward-ref\n  @ContentChildren(forwardRef(() => SohoAccordionHeaderComponent))\n  headers: QueryList<SohoAccordionHeaderComponent>;\n\n  // tslint:disable-next-line:no-forward-ref\n  @ContentChildren(forwardRef(() => SohoAccordionPaneComponent))\n  panes: QueryList<SohoAccordionPaneComponent>;\n\n  public sampleData = [\n    { id: 1, header: 'Header 1', content: 'This is the content of header 1', expanded: false  },\n    { id: 2, header: 'Header 2', content: 'This is the content of header 2', expanded: true }\n  ];\n\n  public allowOnePane = true;\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  public addMore() {\n    this.sampleData.forEach((d) => { d.expanded = false; });\n    const idx = this.sampleData.length + 1;\n    this.sampleData.push({ id: idx, header: 'Header ' + idx, content: 'I\\'ve added some more header ' + idx, expanded: true });\n\n    // The updates must be called after the add has ocurred to allow for the view to be updated view, otherwise\n    // the widget does not see the changes.  Consider changing the\n    setTimeout(() => {\n      this.accordion.updated();\n    });\n  }\n\n  public toggleAllowOnePane(): void {\n    this.allowOnePane = !this.allowOnePane;\n\n    // If only one pane is allowed, then collapse them.\n    if (this.allowOnePane) {\n      let collapse = false;\n      this.sampleData.forEach((d) => {\n        if (d.expanded && !collapse) {\n          collapse = true;\n        } else {\n          d.expanded = false;\n        }\n      });\n    }\n\n    setTimeout(() => { this.accordion.updated(); });\n  }\n\n  public onExpand(event: SohoAccordionEvent) {\n    const header = this.sampleData.find((h) => `${h.id}` === event.anchor[0].parentElement.id);\n\n    if (header) {\n      this.headers.forEach((h) => this.accordion.collapse(h));\n\n      // this.accordion.collapse(header)\n      header.expanded = true;\n    }\n  }\n\n  public onCollapse(event: SohoAccordionEvent) {\n    const header = this.sampleData.find((h) => `${h.id}` === event.anchor[0].parentElement.id);\n\n    if (header) {\n      header.expanded = false;\n    }\n\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { SohoAccordionComponent } from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-panels-demo', // tslint:disable-line\n  templateUrl: './accordion-panels.demo.html',\n})\nexport class AccordionPanelsDemoComponent {\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  onBeforeCollapse(args) {\n    console.log('Collapsed!', args);\n  }\n  onBeforeExpand(args) {\n    console.log('Expanded!', args);\n  }\n  onBeforeSelect(args) {\n    console.log('Selected!', args);\n  }\n  onAfterExpand(args) {\n    console.log('onAfterExpand!', args);\n  }\n  onSelected(args) {\n    console.log('onSelected!', args);\n  }\n\n  onFollowlink(args): void {\n    console.log('onFollowlink!', args);\n  }\n  onExpand(args) {\n    console.log('onExpand!', args);\n  }\n  onCollapse(args): void {\n    console.log('onExpand!', args);\n  }\n  onAfterCollapse(args): void {\n    console.log('onAfterCollapse!', args);\n  }\n}\n","import { Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { SohoAccordionComponent } from 'ids-enterprise-ng';\n\n@Component({\n  selector: 'accordion-demo', // tslint:disable-line\n  templateUrl: './accordion.demo.html',\n})\nexport class AccordionDemoComponent implements AfterViewInit {\n\n  @ViewChild(SohoAccordionComponent, { static: true }) accordion: SohoAccordionComponent;\n\n  onBeforeCollapse(args) {\n    console.log('Collapsed!', args);\n  }\n  onBeforeExpand(args) {\n    console.log('Expanded!', args);\n  }\n  onBeforeSelect(args) {\n    console.log('Selected!', args);\n  }\n  onAfterExpand(args) {\n    console.log('onAfterExpand!', args);\n  }\n  onSelected(args) {\n    console.log('onSelected!', args);\n  }\n\n  onFollowlink(args): void {\n    console.log('onFollowlink!', args);\n  }\n  onExpand(args) {\n    console.log('onExpand!', args);\n  }\n  onCollapse(args): void {\n    console.log('onExpand!', args);\n  }\n  onAfterCollapse(args): void {\n    console.log('onAfterCollapse!', args);\n  }\n  collapseAll(): void {\n    this.accordion.collapseAll();\n  }\n  expandAll(): void {\n    this.accordion.expandAll();\n  }\n\n  toggle(): void {\n    this.accordion.toggle(this.accordion.getHeader(1));\n  }\n\n  expand(): void {\n    this.accordion.expand(this.accordion.getHeader(1));\n  }\n\n  collapse(): void {\n    this.accordion.collapse(this.accordion.getHeader(1));\n  }\n\n  disable(): void {\n    this.accordion.getHeader(1).isDisabled = true;\n    //    this.accordion.disable();\n  }\n\n  enable(): void {\n    this.accordion.getHeader(1).isDisabled = false;\n    // this.accordion.enable();\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  update(): void {\n    if (this.accordion.displayChevron === undefined) {\n      this.accordion.displayChevron = false;\n    } else {\n      this.accordion.displayChevron = !this.accordion.displayChevron;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}