{"version":3,"sources":["src/app/locale/locale-pipe.demo.html","src/app/locale/locale-demo.module.ts","src/app/locale/locale-demo.routes.ts","src/app/locale/locale-pipe.demo.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row top-padding\\\">\\r\\n  <div class=\\\"two-thirds column\\\">\\r\\n    <form [formGroup]=\\\"demoForm\\\">\\r\\n\\r\\n      <div class=\\\"field\\\">\\r\\n        <label soho-label for=\\\"locales\\\">{{'Locales'|sohoTranslate}}</label>\\r\\n        <select soho-dropdown noSearch name=\\\"locales\\\" formControlName=\\\"locale\\\">\\r\\n          <option *ngFor=\\\"let locale of locales\\\" [ngValue]=\\\"locale.value\\\">{{locale.label}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{demoForm.controls.locale.value}}\\\"/>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <hr>\\r\\n      <br/>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label for=\\\"datepicker\\\" class=\\\"label\\\">Date</label>\\r\\n        <input soho-datepicker name=\\\"datepicker\\\" formControlName=\\\"datepicker\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.datepicker|sohoFormatDate}}\\\"/>\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.datepicker|sohoFormatDate:{date:'long'} }}\\\"/>\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.datepicker|sohoFormatDate:{date:'short'} }}\\\"/>\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.datepicker|sohoFormatDate:{pattern:'d/M/yyyy HH:mm:ss'} }}\\\"/>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <hr>\\r\\n      <br/>\\r\\n      <div class=\\\"field\\\">\\r\\n          <label soho-label for=\\\"number\\\" >Number</label>\\r\\n          <input id=\\\"number\\\" name=\\\"number\\\" alignRight=\\\"true\\\" soho-input soho-mask [process]=\\\"'number'\\\" [integerLimit]=\\\"5\\\" formControlName=\\\"number\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.number|sohoFormatNumber}}\\\"/>\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.number|sohoFormatNumber:{style: 'currency'} }}\\\"/>\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.number|sohoFormatNumber:{style: 'percent'} }}\\\"/>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <hr>\\r\\n      <br/>\\r\\n      <div class=\\\"field\\\">\\r\\n          <label soho-label for=\\\"resourceKey\\\">Resource</label>\\r\\n          <input id=\\\"resourceKey\\\" name=\\\"resourceKey\\\" soho-input formControlName=\\\"resourceKey\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <input soho-textarea [readOnly]=\\\"true\\\" value=\\\"{{model.resourceKey|sohoTranslate}}\\\"/>\\r\\n      </div>\\r\\n      <br/>\\r\\n      <hr>\\r\\n      <br/>\\r\\n      <div style=\\\"text-align: center;\\\">\\r\\n        <button soho-button=\\\"primary\\\">{{'Yes'|sohoTranslate}}</button>\\r\\n        <button soho-button=\\\"secondary\\\">{{'No'|sohoTranslate}}</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule\r\n} from '@angular/forms';\r\n\r\nimport { SohoComponentsModule } from 'ids-enterprise-ng';\r\n\r\nimport { LocalePipeDemoComponent } from './locale-pipe.demo';\r\nimport { LocaleDemoRoutingModule } from './locale-demo.routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LocalePipeDemoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SohoComponentsModule,\r\n    LocaleDemoRoutingModule\r\n   ],\r\n  providers: [\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class LocaleDemoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  Routes,\r\n  RouterModule\r\n} from '@angular/router';\r\n\r\nimport { LocalePipeDemoComponent } from './locale-pipe.demo';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LocalePipeDemoComponent,\r\n    children: [\r\n      { path: '', component: LocalePipeDemoComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LocaleDemoRoutingModule { }\r\n","import {\r\n  Component,\r\n  ChangeDetectorRef,\r\n  NgZone,\r\n  ChangeDetectionStrategy\r\n } from '@angular/core';\r\n\r\nimport {\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-locale-pipe-demo',\r\n  templateUrl: './locale-pipe.demo.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LocalePipeDemoComponent {\r\n\r\n  demoForm: FormGroup;\r\n\r\n  public locales = [\r\n    { value: 'en-US', label: 'English (American)' },\r\n    { value: 'en-GB', label: 'English (British)' },\r\n    { value: 'zh-CN', label: 'Chinese (Simplified)' },\r\n    { value: 'pt-BR', label: 'Portugese (Brazillian)' },\r\n    { value: 'fr-FR', label: 'French (France)' }\r\n  ];\r\n\r\n  public model = {\r\n    locale: '',\r\n    datepicker: new Date(),\r\n    number: 1000,\r\n    resourceKey: 'Ok'\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ref: ChangeDetectorRef,\r\n    private ngZone: NgZone) {\r\n\r\n    // Make sure the locale is set.\r\n    this.model.locale = Soho.Locale.currentLocale.name;\r\n\r\n    // Create the demo form, and initialise with the model data.\r\n    // Normally, this would be a two step process, setting\r\n    // the data on a load event or via nsxs.\r\n    this.demoForm = this.formBuilder.group({\r\n      locale: [this.model.locale],\r\n      datepicker: [this.model.datepicker],\r\n      number: [this.model.number],\r\n      resourceKey: [this.model.resourceKey]\r\n    });\r\n\r\n    // Listen for changes to the reactive form ...\r\n    this.demoForm.valueChanges.subscribe(() => {\r\n      // ... and assign the data to the model.\r\n      // Ideally this would be sone in the submit, but for the\r\n      // purpose of this demo do it on every change.\r\n      this.model.number = this.demoForm.controls['number'].value;\r\n      this.model.resourceKey = this.demoForm.controls['resourceKey'].value;\r\n      this.ref.markForCheck();\r\n    });\r\n\r\n    this.demoForm.controls['datepicker'].valueChanges.subscribe((value) => {\r\n      this.model.datepicker = Soho.Locale.parseDate(value) || new Date();\r\n      this.ref.markForCheck();\r\n    });\r\n\r\n    // The locale selector requires the locale to be updated on the\r\n    // Soho Locale object, this is done via a valueChanges listener.\r\n    this.demoForm.controls['locale'].valueChanges.subscribe((value) => {\r\n\r\n      /// Really changed?\r\n      if (Soho.Locale.currentLocale.name !== value) {\r\n\r\n        // ... as we're calling into jQuery code run outside\r\n        // of angular ...\r\n        this.ngZone.runOutsideAngular(() => {\r\n          // ... setting the locale, and waiting for the locale to load ...\r\n          Soho.Locale.set(value).done(\r\n            () => {\r\n              // ... once loaded, back into the angular zone ...\r\n              this.ngZone.run(\r\n                () => {\r\n                  // ... update the display to ensure all controls are updated with the\r\n                  // new locale.\r\n                  this.ref.markForCheck();\r\n                }\r\n              );\r\n           });\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"locale-locale-demo-module-es5.js"}